// MIT License

// Copyright (c) 2021 Mike Gowanlock

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//data type of the data (float or double)
#define DTYPE float

#define BLOCKSIZE 256

//Only works in 2-D 
//Future release may include n-dimensional DBSCAN
#define GPUNUMDIM 2 //do not change
#define NUMINDEXEDDIM 2 //do not change

#define NTHREADS 8 //Number of physical cores on the machine, according to GPUInfo.txt, 8 Compute Units should corr to 8 cores

#define NSEARCHTHREADS 1 //Number of threads for DBSCAN part (1)

#define DENSEBOXMODE 2 //0-OFF, 1-ON, 2-DYNAMIC
 
//the number of concurrently executing partitions
//excludes the GPU batching. Has nested parallelism.
#define PARCHUNKS 5 // don't use more than CPU cores, scaled to 5 as value was originally 10 when NTHREADS was 16
 
#define NUMGPU 1
#define GPUSTREAMS 3 //number of concurrent gpu streams per gpu

//Only one partition option should be used
#define PARTITIONMODE 1 //1- default as in ICS paper
						//2- move the partition boundary by up to 75% to exploit local minima

						

#define SCHEDULE 0   //0- default order of partitions generated by the partitioning scheme
					//1- order the processing of the partitions to improve load balancing
					//Most work to least work

#define CTYPE unsigned long long //used when counting performance metrics

#define MU 0.25 //For controlling the threshold density to use densebox
			//1.0=need minpts pts in all dense boxes
			//0.5=need half of minpts pts in all denseboxes
			//2.0=need 2xminpts pts in all denseboxes

#define GPUBUFFERSIZE 100000000 //Buffer size for results in each stream


//generates a python file that prints a visualization of the clusters
//The points are sampled to make plotting tractable
#define PRINTCLUSTERS 0 


